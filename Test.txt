```python
import boto3
import os
import sys
from botocore.exceptions import NoCredentialsError, PartialCredentialsError

# Configure AWS credentials in one of these ways:
# 1. Environment variables:
#    setx AWS_ACCESS_KEY_ID "YOUR_ACCESS_KEY_ID"
#    setx AWS_SECRET_ACCESS_KEY "YOUR_SECRET_ACCESS_KEY"
#    setx AWS_DEFAULT_REGION "us-east-1"
# 2. AWS CLI:
#    aws configure
# 3. Shared credentials file (~/.aws/credentials) and config (~/.aws/config)
# 4. Explicitly in code (not recommended for production):
#    boto3.client('comprehend', aws_access_key_id='KEY', aws_secret_access_key='SECRET', region_name='REGION')


def get_comprehend_client():
    """Returns a Comprehend client, handling missing credentials."""
    try:
        client = boto3.client('comprehend')
        # Simple call to verify credentials
        client.list_key_phrases_detection_jobs(MaxResults=1)
        return client
    except (NoCredentialsError, PartialCredentialsError):
        print("ERROR: AWS credentials not found. Please configure them via AWS CLI or environment variables.")
        sys.exit(1)
    except client.exceptions.UnsupportedLanguageException:
        # ignore language exception for this check
        return client


def detect_key_phrases(client, text, language_code='en'):
    """
    Detects key phrases in the given text using Amazon Comprehend.

    :param client: Boto3 Comprehend client
    :param text: The input text to analyze.
    :param language_code: The language code of the input text (default 'en').
    :return: A list of detected key phrases with score.
    """
    response = client.detect_key_phrases(Text=text, LanguageCode=language_code)
    return response.get('KeyPhrases', [])


def main():
    # Initialize client
    client = get_comprehend_client()

    # Read input text
    if len(sys.argv) > 1:
        input_text = ' '.join(sys.argv[1:])
    else:
        input_text = input("Enter text to analyze for key phrases: ")

    if not input_text.strip():
        print("No text provided. Exiting.")
        sys.exit(0)

    print(f"\nAnalyzing text: {input_text}\n")

    try:
        key_phrases = detect_key_phrases(client, input_text)
    except Exception as e:
        print(f"Error calling Comprehend: {e}")
        sys.exit(1)

    if not key_phrases:
        print("No key phrases detected.")
    else:
        print("Detected Key Phrases:")
        for phrase in key_phrases:
            text = phrase['Text']
            score = phrase['Score']
            print(f" - {text} (Score: {score:.2f})")


if __name__ == '__main__':
    main()
```
