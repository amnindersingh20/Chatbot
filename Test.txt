// 1. Retrieve and parse the ssoData from sessionStorage
const ssoDataRaw = sessionStorage.getItem('ssoData');
if (!ssoDataRaw) {
  console.error('No ssoData found in sessionStorage');
} else {
  const ssoData = JSON.parse(ssoDataRaw);

  // 2. Filter or extract the particular element you need.
  // For example, if ssoData is an object with multiple keys and you need a specific key:
  const desiredElement = ssoData.yourDesiredKey; // Replace with your actual key

  // Or if ssoData is an array and you need to filter based on a condition:
  // const desiredElement = ssoData.filter(item => item.id === 'yourId')[0];

  // Check if the desired element was found
  if (!desiredElement) {
    console.error('Desired element not found in ssoData');
  } else {
    // 3. Prepare the payload for the API Gateway
    const payload = {
      element: desiredElement,
      // add any additional parameters if needed
    };

    // 4. Invoke the Lambda function via API Gateway using fetch
    fetch('https://your-api-gateway-endpoint.amazonaws.com/your-stage/your-resource', {
      method: 'POST', // or 'GET' if your endpoint expects query parameters
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(payload)
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`API call failed: ${response.statusText}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('Lambda response:', data);
    })
    .catch(error => {
      console.error('Error calling API Gateway:', error);
    });
  }
}
