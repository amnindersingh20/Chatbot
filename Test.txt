```python
import boto3
import os
import sys
from botocore.exceptions import NoCredentialsError, PartialCredentialsError

# Ensure you have configured AWS credentials and region via one of:
#  - Environment variables (setx AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION)
#  - AWS CLI (aws configure)
#  - Shared credentials file (~/.aws/credentials) and config (~/.aws/config)


def get_comprehend_client():
    """Returns a Comprehend client, handling missing credentials and providing debug info."""
    # Create a session to inspect credentials
    session = boto3.Session()
    creds = session.get_credentials()
    region = session.region_name or os.environ.get('AWS_DEFAULT_REGION')

    # Debug: Print out what boto3 sees
    print(f"DEBUG: AWS Access Key ID: {getattr(creds, 'access_key', None)}")
    print(f"DEBUG: AWS Secret Key present: {bool(getattr(creds, 'secret_key', None))}")
    print(f"DEBUG: AWS Session Token present: {bool(getattr(creds, 'token', None))}")
    print(f"DEBUG: AWS Region: {region}")

    if not creds or not creds.access_key or not creds.secret_key:
        print("ERROR: AWS credentials not found. Please configure them via AWS CLI or environment variables.")
        sys.exit(1)
    if not region:
        print("ERROR: AWS region not set. Please set AWS_DEFAULT_REGION or configure in ~/.aws/config.")
        sys.exit(1)

    try:
        client = session.client('comprehend', region_name=region)
        # Verify by making a lightweight call
        client.list_key_phrases_detection_jobs(MaxResults=1)
        return client
    except (NoCredentialsError, PartialCredentialsError):
        print("ERROR: Invalid AWS credentials. Please check your configuration.")
        sys.exit(1)
    except Exception as e:
        print(f"ERROR: Failed to create Comprehend client: {e}")
        sys.exit(1)


def detect_key_phrases(client, text, language_code='en'):
    """
    Detects key phrases in the given text using Amazon Comprehend.
    """
    response = client.detect_key_phrases(Text=text, LanguageCode=language_code)
    return response.get('KeyPhrases', [])


def main():
    # Initialize client
    client = get_comprehend_client()

    # Read input text
    if len(sys.argv) > 1:
        input_text = ' '.join(sys.argv[1:])
    else:
        input_text = input("Enter text to analyze for key phrases: ")

    if not input_text.strip():
        print("No text provided. Exiting.")
        sys.exit(0)

    print(f"\nAnalyzing text: {input_text}\n")

    try:
        key_phrases = detect_key_phrases(client, input_text)
    except Exception as e:
        print(f"Error calling Comprehend: {e}")
        sys.exit(1)

    if not key_phrases:
        print("No key phrases detected.")
    else:
        print("Detected Key Phrases:")
        for phrase in key_phrases:
            text = phrase['Text']
            score = phrase['Score']
            print(f" - {text} (Score: {score:.2f})")


if __name__ == '__main__':
    main()
```
