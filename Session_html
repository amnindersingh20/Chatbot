<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Streaming API Test</title>
  <style>
    body {
      font-family: sans-serif;
      margin: 2rem;
    }
    #chat {
      border: 1px solid #ccc;
      padding: 1rem;
      height: 300px;
      overflow-y: auto;
      white-space: pre-wrap;
      background: #f9f9f9;
    }
    #controls {
      margin-bottom: 1rem;
    }
    textarea {
      width: 100%;
      height: 80px;
      margin-bottom: 0.5rem;
    }
    button {
      padding: 0.5rem 1rem;
      font-size: 1rem;
    }
  </style>
</head>
<body>

  <h1>Streaming API Test</h1>

  <div id="controls">
    <label for="payload">Request JSON:</label><br />
    <textarea id="payload">
{
  "message": "Hello, how are you?",
  "filter": { "key": "type", "value": "comprehensive" }
}
    </textarea><br />
    <button id="sendBtn">Send</button>
  </div>

  <div id="chat"></div>

  <script>
    // TODO: replace with your full invoke URL (including stage & path)
    const API_URL = 'https://abc123.execute-api.us-east-1.amazonaws.com/prod/chat';

    const sendBtn = document.getElementById('sendBtn');
    const payloadInput = document.getElementById('payload');
    const chatDiv = document.getElementById('chat');

    sendBtn.addEventListener('click', async () => {
      // clear previous chat
      chatDiv.textContent = '';
      sendBtn.disabled = true;

      let payload;
      try {
        payload = JSON.parse(payloadInput.value);
      } catch (err) {
        alert('Invalid JSON in payload');
        sendBtn.disabled = false;
        return;
      }

      try {
        const res = await fetch(API_URL, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });

        if (!res.ok) {
          const errText = await res.text();
          chatDiv.textContent = `Error ${res.status}: ${errText}`;
          sendBtn.disabled = false;
          return;
        }

        const reader = res.body.getReader();
        const decoder = new TextDecoder();
        let done = false;

        while (!done) {
          const { value, done: doneReading } = await reader.read();
          done = doneReading;
          if (value) {
            const chunk = decoder.decode(value, { stream: true });
            chatDiv.textContent += chunk;
            // auto-scroll to bottom
            chatDiv.scrollTop = chatDiv.scrollHeight;
          }
        }
      } catch (err) {
        chatDiv.textContent = 'Fetch error: ' + err.message;
      } finally {
        sendBtn.disabled = false;
      }
    });
  </script>

</body>
</html>
