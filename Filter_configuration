def syntax_review(text, refValues, fieldList):
    syntaxErrors = []
    missingRefs = []
    #Checks the definition for a list of common issues
    badStrings = ['”', '“', '=', 'NE True', 'EQ true', 'EQ false']
    for badSring in badStrings:
        if badSring in text:
            syntaxErrors.append('Check definition for: ' + badSring)
    
    #Checks that all brackets have an open and close
    brackets = [{'open':'(', 'close':')'}, {'open':'[', 'close':']'}, {'open':'{', 'close':'}'}, {'open':'<', 'close':'>'}]
    try:
        for bracket in brackets:
            openNum = text.count(bracket['open'])
            closeNum = text.count(bracket['close'])
            if openNum > closeNum:
                syntaxErrors.append('"' + bracket['close'] + '" missing')
            elif openNum < closeNum:
                syntaxErrors.append('"' + bracket['open'] + '" missing')
        
        if text.count('"') % 2 != 0:
            syntaxErrors.append('Quote is missing')
    except:
        pass

    #Checks that References are in back of the specs
    try:
        for reference in refValues:
            if reference not in fieldList:
                missingRefs.append(reference + ' not in the back of specs')
    
    except:
        pass

    return(syntaxErrors, missingRefs)
