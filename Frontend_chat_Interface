window.addEventListener('message', function(event) {
        console.log('Message received from parent:', event.data);
        const { questions, suggested_message } = event.data;
        const chatHistory = document.getElementById('chat-history');

        // Check for existing suggested message
        const lastSuggested = Array.from(chatHistory.children)
            .reverse()
            .find(el => el.classList.contains('suggested_messagep'));

        // Only add new suggested message if different from last one
        if (!lastSuggested || lastSuggested.textContent !== suggested_message) {
            const suggested_messagep = document.createElement('div');
            suggested_messagep.className = 'suggested_messagep';
            suggested_messagep.textContent = suggested_message;
            chatHistory.appendChild(suggested_messagep);
        }

        // Filter out existing questions
        const existingQuestions = Array.from(chatHistory.getElementsByClassName('question-tile'))
            .map(tile => tile.textContent);
        const newQuestions = questions.filter(question => 
            !existingQuestions.includes(question)
        );

        // Add only new questions
        newQuestions.forEach(question => {
            const questionTile = document.createElement('div');
            questionTile.className = 'question-tile';
            questionTile.onclick = () => sendQuestion(question);
            questionTile.textContent = question;
            chatHistory.appendChild(questionTile);
        });

        // Auto-scroll to bottom
        chatHistory.scrollTop = chatHistory.scrollHeight;
    });
