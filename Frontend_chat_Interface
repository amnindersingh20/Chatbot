<!DOCTYPE html>
<html>
<head>
    <title>Chatbot Interface</title>
    <style>
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            flex-direction: column;
            background: #f0f2f5;
        }
        #chat-container {
            flex: 1;
            max-width: 800px;
            margin: 0 auto;
            width: 100%;
            padding: 20px;
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
        }
        #chat-history {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
            background: white;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .message {
            margin-bottom: 15px;
            display: flex;
        }
        .user-message {
            justify-content: flex-end;
        }
        .bot-message {
            justify-content: flex-start;
        }
        .message-bubble {
            max-width: 70%;
            padding: 12px 16px;
            border-radius: 15px;
            word-break: break-word;
        }
        .user-message .message-bubble {
            background: #007bff;
            color: white;
            border-bottom-right-radius: 5px;
        }
        .bot-message .message-bubble {
            background: #e9ecef;
            color: #212529;
            border-bottom-left-radius: 5px;
        }
        #input-container {
            display: flex;
            gap: 10px;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 -2px 5px rgba(0,0,0,0.05);
        }
        #message-input {
            flex: 1;
            padding: 15px;
            border: 2px solid #007bff;
            border-radius: 8px;
            font-size: 16px;
            outline: none;
        }
        #send-button {
            padding: 15px 30px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        #send-button:hover {
            background: #0056b3;
        }
        .typing-indicator {
            display: none;
            padding: 10px;
            font-style: italic;
            color: #6c757d;
        }
        .error-message {
            color: #dc3545;
            padding: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div id="chat-container">
        <div id="chat-history"></div>
        <div class="typing-indicator" id="typing-indicator">Bot is typing...</div>
        <div class="error-message" id="error-message"></div>
        <div id="input-container">
            <input type="text" id="message-input" placeholder="Type your message..." 
                   onkeypress="handleEnterKey(event)">
            <button id="send-button" onclick="sendMessage()">Send</button>
        </div>
    </div>

    <script>
        const API_URL = 'YOUR_API_GATEWAY_URL';
        const chatHistory = document.getElementById('chat-history');
        const messageInput = document.getElementById('message-input');
        const typingIndicator = document.getElementById('typing-indicator');
        const errorMessage = document.getElementById('error-message');

        function handleEnterKey(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                sendMessage();
            }
        }

        function appendMessage(message, isUser) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;
            
            const bubble = document.createElement('div');
            bubble.className = 'message-bubble';
            bubble.textContent = message;
            
            messageDiv.appendChild(bubble);
            chatHistory.appendChild(messageDiv);
            
            // Scroll to bottom
            chatHistory.scrollTop = chatHistory.scrollHeight;
        }

        async function sendMessage() {
            const message = messageInput.value.trim();
            if (!message) return;

            // Clear input and errors
            messageInput.value = '';
            errorMessage.textContent = '';
            
            // Show user message
            appendMessage(message, true);
            
            // Show typing indicator
            typingIndicator.style.display = 'block';
            chatHistory.scrollTop = chatHistory.scrollHeight;

            try {
                const response = await fetch(API_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        prompt: message
                    })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                appendMessage(data.response, false);

            } catch (error) {
                errorMessage.textContent = `Error: ${error.message}`;
            } finally {
                typingIndicator.style.display = 'none';
            }
        }
    </script>
</body>
</html>
