case 6:
  const inputs = $('.form-control');
  const allowedValues = new Set(['1', '2', '3']);

  let values = [];       // valid unique entries
  let hasInvalid = false; // flag for invalid or duplicate input

  // Check all inputs
  inputs.each(function () {
    let val = this.value.trim();

    if (val === "") return; // skip empty

    // Invalid if not in allowedValues
    if (!allowedValues.has(val)) {
      hasInvalid = true;
    } 
    // Duplicate if already in values
    else if (values.includes(val)) {
      hasInvalid = true;
    } else {
      values.push(val); // store valid unique value
    }
  });

  // Show or hide warning
  if (hasInvalid) {
    $("#message").removeClass("d-none");
  } else {
    $("#message").addClass("d-none");
  }

  // Enable Next button only if exactly 3 valid unique entries and no invalid input
  if (values.length === 3 && !hasInvalid) {
    $(".nextbutton").removeAttr("disabled").removeClass("disabled");
  } else {
    $(".nextbutton").attr("disabled", true).addClass("disabled");
  }

  // Save values in sessionStorage (store 0 for empty or invalid entries)
  inputs.each(function (i) {
    let val = this.value.trim();
    if (!allowedValues.has(val) || val === "") val = "0"; 
    sessionStorage.setItem("r" + (14 + i), val);
  });

  break;
